<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Linux 运维笔记</title><description>运维需要的不是天赋异禀，而是经验丰富！ feedId:90082981697670144+userId:YiFvZwEv6nYT1MhCcJua8</description><link>https://jangrui.com/</link><atom:link href="https://jangrui.com/feed_rss_created.xml" rel="self" type="application/rss+xml" /><managingEditor>Jangrui</managingEditor><docs>https://github.com/jangrui/jangrui.github.io</docs><language>zh</language> <pubDate>Thu, 12 Dec 2024 17:23:38 -0000</pubDate> <lastBuildDate>Thu, 12 Dec 2024 17:23:38 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.17.0</generator> <image> <url>None</url> <title>Linux 运维笔记</title><link>https://jangrui.com/</link> </image> <item> <title>Home</title> <description></description><link>https://jangrui.com/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/</guid> </item> <item> <title>安装 docker</title> <description>&lt;h1&gt;安装 docker&lt;/h1&gt;&lt;p&gt;=== &#34;CentOS&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;```bashyum remove -y dockeryum install -y docker-ce```&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;=== &#34;Ubuntu&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;```bashsudo apt-get install -y d...&lt;/code&gt;&lt;/pre&gt;</description><link>https://jangrui.com/container/docker/install/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/container/docker/install/</guid> </item> <item> <title>CKA 心得</title> <description>&lt;h1&gt;CKA 心得&lt;/h1&gt;&lt;h2&gt;1. CKA、CKAD考试经验&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;CKA:&lt;/strong&gt; Kubernetes管理员认证（CKA）旨在确保认证持有者具备履行Kubernetes管理员职责的技能，知识和能力。 CKA认证可帮助经过认证的管理员在就业市场中快速建立自己的信誉和价值，并能帮助公司更快地雇用高质量的团队来支持他们的发...&lt;/p&gt;</description><link>https://jangrui.com/container/kubernetes/cka/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/container/kubernetes/cka/</guid> </item> <item> <title>安装 k8s</title> <description>&lt;h1&gt;安装 k8s&lt;/h1&gt;&lt;h2&gt;安装环境&lt;/h2&gt;&lt;p&gt;| Hostname | IP | CPU | Memory | 系统版本 | Firewalld | Selinux | Docker Version | Kubernetes Version || --- | --- | --- | --- | --- | --- | ...&lt;/p&gt;</description><link>https://jangrui.com/container/kubernetes/install-k8s/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/container/kubernetes/install-k8s/</guid> </item> <item> <title>安装 metrics-server</title> <description>&lt;h1&gt;安装 metrics-server&lt;/h1&gt;&lt;p&gt;先安装 metrics-server ，这样就能监控到pod。node的资源情况（默认只有cpu、memory的资源审计信息哟，更专业的话需要对接 Prometheus）&lt;/p&gt;&lt;p&gt;```bashcat &amp;gt; metrics-server.yaml &amp;lt;&amp;lt;-EOF&lt;/p&gt;&lt;hr&gt;&lt;p&gt;apiV...&lt;/p&gt;</description><link>https://jangrui.com/container/kubernetes/install-metrics-server-for-k8s/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/container/kubernetes/install-metrics-server-for-k8s/</guid> </item> <item> <title>介绍</title> <description>&lt;h1&gt;Kubernetes 介绍&lt;/h1&gt;&lt;p&gt;Kubernetes 是用于自动部署，扩展和管理容器化应用程序的开源系统。&lt;/p&gt;&lt;p&gt;它将组成应用程序的容器组合成逻辑单元，以便于管理和服务发现。Kubernetes 源自 Google 15 年生产环境的运维经验，同时凝聚了社区的最佳创意和实践。&lt;/p&gt;&lt;h2&gt;Kubernetes 特性&lt;/h2&gt;&lt;p&gt;...&lt;/p&gt;</description><link>https://jangrui.com/container/kubernetes/introduction-to-kubernetes/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/container/kubernetes/introduction-to-kubernetes/</guid> </item> <item> <title>搭建 nfs 作为 k8s 默认 sc</title> <description>&lt;h1&gt;配置 NFS 服务器&lt;/h1&gt;&lt;p&gt;```bashyum install -y nfs-utilsecho &#34;/nfs/data/ *(insecure,rw,sync,no_root_squash)&#34; &amp;gt; /etc/exports&lt;/p&gt;&lt;h1&gt;echo /nfs/data 172.26.248.0/20(rw,no_ro...&lt;/h1&gt;</description><link>https://jangrui.com/container/kubernetes/setup-nfs-as-k8s-default-sc/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/container/kubernetes/setup-nfs-as-k8s-default-sc/</guid> </item> <item> <title>Nginx 面试题</title> <description>&lt;h1&gt;Nginx 面试题&lt;/h1&gt;&lt;h2&gt;1. 什么是 Nginx？&lt;/h2&gt;&lt;p&gt;Nginx 是一个 轻量级 / 高性能的反向代理 Web 服务器，用于 HTTP、HTTPS、SMTP、POP3 和 IMAP 协议。他实现非常高效的反向代理、负载平衡，他可以处理 2-3 万并发连接数，官方监测能支持 5 万并发，现在中国使用 ngi...&lt;/p&gt;</description><link>https://jangrui.com/interview/nginx/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/interview/nginx/</guid> </item> <item> <title>CentOS 7 初始化</title> <description>&lt;h1&gt;CentOS 7 初始化&lt;/h1&gt;&lt;p&gt;&lt;img alt=&#34;Linux&#34; src=&#34;https://cdn.jsdelivr.net/gh/jangrui/images@main//linux.png&#34; title=&#34;linux.png&#34;&gt;&lt;/p&gt;&lt;p&gt;=== &#34;手动初始化&#34;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;- 只允许 wheel 组用户切换 root```bashsu...&lt;/code&gt;&lt;/pre&gt;</description><link>https://jangrui.com/linux/centos-init/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/linux/centos-init/</guid> </item> <item> <title>SSH 登录失败后锁定时间限制</title> <description>&lt;h1&gt;SSH 登录失败后锁定时间限制&lt;/h1&gt;&lt;p&gt;在 Linux7 中，你可以通过修改 /etc/pam。d/system--auth 文件来配置重复登录失败后锁定时间限制。具体步骤如下：&lt;/p&gt;&lt;p&gt;1.打开 &lt;code&gt;/etc/pam.d/system-auth&lt;/code&gt; 文件，找到 auth 部分。&lt;/p&gt;&lt;p&gt;2.在 auth 部分添加如下配置：&lt;/p&gt;&lt;p&gt;`...&lt;/p&gt;</description><link>https://jangrui.com/linux/lock-time-limit-after-ssh-login-failure/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/linux/lock-time-limit-after-ssh-login-failure/</guid> </item> <item> <title>Bash 的算术运算</title> <description>&lt;h1&gt;Bash 的算术运算&lt;/h1&gt;&lt;h2&gt;算术表达式&lt;/h2&gt;&lt;p&gt;&lt;code&gt;((...))&lt;/code&gt;语法可以进行整数的算术运算。&lt;/p&gt;&lt;p&gt;&lt;code&gt;bash$ ((foo = 5 + 5))$ echo $foo10&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;((...))&lt;/code&gt;会自动忽略内部的空格，所以下面的写法都正确，得到同样的结果。&lt;/p&gt;&lt;p&gt;```bash$ ((2+2))$ (...&lt;/p&gt;</description><link>https://jangrui.com/linux/bash/arithmetic/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/linux/bash/arithmetic/</guid> </item> <item> <title>数组</title> <description>&lt;h1&gt;数组&lt;/h1&gt;&lt;p&gt;数组（array）是一个包含多个值的变量。成员的编号从0开始，数量没有上限，也没有要求成员被连续索引。&lt;/p&gt;&lt;h2&gt;创建数组&lt;/h2&gt;&lt;p&gt;数组可以采用逐个赋值的方法创建。&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashARRAY[INDEX]=value&lt;/code&gt;&lt;/p&gt;&lt;p&gt;上面语法中，&lt;code&gt;ARRAY&lt;/code&gt;是数组的名字，可以是任意合法的变量名。&lt;code&gt;INDEX&lt;/code&gt;...&lt;/p&gt;</description><link>https://jangrui.com/linux/bash/array/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/linux/bash/array/</guid> </item> <item> <title>Bash 教程</title> <author>阮一峰</author> <description>&lt;h1&gt;Bash 教程&lt;/h1&gt;&lt;h2&gt;Author&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://www.ruanyifeng.com/&#34;&gt;阮一峰&lt;/a&gt;{:target=&#34;_blank&#34;}，70后，英文名Frank。上海财经大学世界经济博士研究生。主要研究宏观金融、货币政策与美国经济。于2008年6月获得博士学位。目前在上海一所当地大学（上海金融学院 ...&lt;/p&gt;</description><link>https://jangrui.com/linux/bash/author/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/linux/bash/author/</guid> </item> <item> <title>条件判断</title> <description>&lt;h1&gt;条件判断&lt;/h1&gt;&lt;p&gt;本章介绍 Bash 脚本的条件判断语法。&lt;/p&gt;&lt;h2&gt;if 结构&lt;/h2&gt;&lt;p&gt;&lt;code&gt;if&lt;/code&gt;是最常用的条件判断结构，只有符合给定条件时，才会执行指定的命令。它的语法如下。&lt;/p&gt;&lt;p&gt;```bashif commands; then commands[elif commands; then commands...]...&lt;/p&gt;</description><link>https://jangrui.com/linux/bash/condition/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/linux/bash/condition/</guid> </item> <item> <title>脚本除错</title> <description>&lt;h1&gt;脚本除错&lt;/h1&gt;&lt;p&gt;本章介绍如何对 Shell 脚本除错。&lt;/p&gt;&lt;h2&gt;常见错误&lt;/h2&gt;&lt;p&gt;编写 Shell 脚本的时候，一定要考虑到命令失败的情况，否则很容易出错。&lt;/p&gt;&lt;p&gt;```bash&lt;/p&gt;&lt;h1&gt;! /bin/bash&lt;/h1&gt;&lt;p&gt;dir_name=/path/not/exist&lt;/p&gt;&lt;p&gt;cd $dir_namerm *```&lt;/p&gt;&lt;p&gt;上面脚本中，如果目...&lt;/p&gt;</description><link>https://jangrui.com/linux/bash/debug/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/linux/bash/debug/</guid> </item> <item> <title>Bash 的模式扩展</title> <description>&lt;h1&gt;Bash 的模式扩展&lt;/h1&gt;&lt;h2&gt;简介&lt;/h2&gt;&lt;p&gt;Shell 接收到用户输入的命令以后，会根据空格将用户的输入，拆分成一个个词元（token）。然后，Shell 会扩展词元里面的特殊字符，扩展完成后才会调用相应的命令。&lt;/p&gt;&lt;p&gt;这种特殊字符的扩展，称为模式扩展（globbing）。其中有些用到通配符，又称为通配符扩展（wild...&lt;/p&gt;</description><link>https://jangrui.com/linux/bash/expansion/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/linux/bash/expansion/</guid> </item> <item> <title>Bash 函数</title> <description>&lt;h1&gt;Bash 函数&lt;/h1&gt;&lt;p&gt;本章介绍 Bash 函数的用法。&lt;/p&gt;&lt;h2&gt;简介&lt;/h2&gt;&lt;p&gt;函数（function）是可以重复使用的代码片段，有利于代码的复用。它与别名（alias）的区别是，别名只适合封装简单的单个命令，函数则可以封装复杂的多行命令。&lt;/p&gt;&lt;p&gt;函数总是在当前 Shell 执行，这是跟脚本的一个重大区别，Bash 会新建一...&lt;/p&gt;</description><link>https://jangrui.com/linux/bash/function/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/linux/bash/function/</guid> </item> <item> <title>Bash 的基本语法</title> <description>&lt;h1&gt;Bash 的基本语法&lt;/h1&gt;&lt;p&gt;本章介绍 Bash 的最基本语法。&lt;/p&gt;&lt;h2&gt;echo 命令&lt;/h2&gt;&lt;p&gt;由于后面的例子会大量用到&lt;code&gt;echo&lt;/code&gt;命令，这里先介绍这个命令。&lt;/p&gt;&lt;p&gt;&lt;code&gt;echo&lt;/code&gt;命令的作用是在屏幕输出一行文本，可以将该命令的参数原样输出。&lt;/p&gt;&lt;p&gt;&lt;code&gt;`bash$ echo hello worldhello world&lt;/code&gt;...&lt;/p&gt;</description><link>https://jangrui.com/linux/bash/grammar/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/linux/bash/grammar/</guid> </item> <item> <title>Bash 简介</title> <description>&lt;h1&gt;Bash 简介&lt;/h1&gt;&lt;p&gt;Bash 是 Unix 系统和 Linux 系统的一种 Shell（命令行环境），是目前绝大多数 Linux 发行版的默认 Shell。&lt;/p&gt;&lt;h2&gt;Shell 的含义&lt;/h2&gt;&lt;p&gt;学习 Bash，首先需要理解 Shell 是什么。Shell 这个单词的原意是“外壳”，跟 kernel（内核）相对应，比喻...&lt;/p&gt;</description><link>https://jangrui.com/linux/bash/intro/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/linux/bash/intro/</guid> </item> <item> <title>循环</title> <description>&lt;h1&gt;循环&lt;/h1&gt;&lt;p&gt;Bash 提供三种循环语法&lt;code&gt;for&lt;/code&gt;、&lt;code&gt;while&lt;/code&gt;和&lt;code&gt;until&lt;/code&gt;。&lt;/p&gt;&lt;h2&gt;while 循环&lt;/h2&gt;&lt;p&gt;&lt;code&gt;while&lt;/code&gt;循环有一个判断条件，只要符合条件，就不断循环执行指定的语句。&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashwhile condition; do commandsdone&lt;/code&gt;&lt;/p&gt;&lt;p&gt;上面代码中，只要满足条件`...&lt;/p&gt;</description><link>https://jangrui.com/linux/bash/loop/</link> <pubDate>Thu, 12 Dec 2024 17:23:11 +0000</pubDate><source url="https://jangrui.com/feed_rss_created.xml">Linux 运维笔记</source><guid isPermaLink="true">https://jangrui.com/linux/bash/loop/</guid> </item> </channel></rss>